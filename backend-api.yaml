openapi: 3.0.0

info:
  title: tide-catcher-next-backend
  description: Backend API serving the Tide Catcher Next frontend
  version: "1.1"

servers:
  - url: "http://localhost:8080"
    description: Development
  - url: "https://tide-catcher.justinwhite.net"
    description: Production
  - url: "https://tide-catcher-next.vercel.app"
    description: Alternate

paths:
  /api/station:
    get:
      description: metadata for the default station
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StationsResponse"

  /api/station/{id}:
    get:
      description: metadata for given station
      parameters:
        - $ref: "#/components/parameters/stationId"
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StationsResponse"

  /api/station/location:
    get:
      description: closest single station to the default location, if any, within 10-160 miles
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StationsResponse"

  /api/station/location/{loc}:
    get:
      description: closest single station to the given location, if any, within 10-160 miles
      parameters:
        - $ref: "#/components/parameters/location"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StationsResponse"

  /api/stations:
    get:
      description: list of all cached stations
      parameters:
        - in: query
          name: refreshed
          schema:
            type: boolean
          required: false
          description: indicates that we arrived here from the /stations/refresh redirect?
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StationsResponse"

  /api/stations/location:
    get:
      description: list of closest stations to the default location, if any, within 10-160 miles
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StationsResponse"

  /api/stations/location/{loc}:
    get:
      description: list of closest stations to the given location, if any, within 10-160 miles
      parameters:
        - $ref: "#/components/parameters/location"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StationsResponse"

  /api/stations/refresh:
    get:
      description: list of all cached stations
      responses:
        303:
          description: "redirect"
          headers:
            Location:
              schema:
                type: string
                format: uri

  /api/tides/location:
    get:
      description: list of next tides for the closest station to the default location
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TidesResponse"

  /api/tides/location/{loc}:
    get:
      description: list of next tides for the closest station to the given location
      parameters:
        - $ref: "#/components/parameters/location"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TidesResponse"

  /api/tides/station:
    get:
      description: list of next tides for the default station
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TidesResponse"

  /api/tides/station/{id}:
    get:
      description: list of next tides for the given station
      parameters:
        - $ref: "#/components/parameters/stationId"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TidesResponse"

components:
  parameters:
    stationId:
      in: path
      name: id
      required: true
      schema:
        type: string
      example: "8441241"
    location:
      in: path
      name: location
      required: true
      schema:
        type: string
      example: "42.710,-70.788"

  schemas:
    Status:
      description: The status of the request
      type: object
      properties:
        code:
          type: string
        message:
          type: string
          default: ""
        example:
          status: { code: 200, msg: "OK" }

    Location:
      description: Structured latitude and longitude
      type: object
      properties:
        lat:
          type: number
          format: float
          description: Latitude
        lon:
          type: number
          format: float
          description: Longitude
      example:
        "location": { "lat": 42.710, "lon": -70.788 }

    Station:
      description: Station entity
      type: object
      properties:
        id:
          type: string
          description: Unique ID of the station
        location:
          type: object
          items:
            $ref: "#/components/schemas/Location"
        name:
          type: string
          description: Name of the station
        eTimesName:
          type: string
          description: Name used by the NOAA Tide Predictions website
        tzOffset:
          type: number
          description: timezone offset in hours from UTC of the station
      example:
        {
          "id": "8441241",
          "location": { "lat": 42.710, "lon": -70.788 },
          "name": "Plum Island South",
          "eTidesName": "Plum Island South",
          "tzOffset": -5,
        }

    StationsResponse:
      description: List of Stations
      type: object
      properties:
        status:
          type: object
          items:
            $ref: "#/components/schemas/Status"
        reqLocation:
          type: object
          items:
            $ref: "#/components/schemas/Location"
        count:
          type: integer
        stations:
          type: array
          items:
            $ref: "#/components/schemas/Station"
      example:
        {
          "status": { code: "OK", message: "" },
          "reqLocation": { "lat": 42.710, "lon": -70.788 },
          "count": 1,
          "stations":
            [
              {
                "id": "8441241",
                "location": { "lat": 42.710, "lon": -70.788 },
                "name": "Plum Island South",
                "eTidesName": "Plum Island South",
                "tzOffset": -5,
              },
            ],
        }

    Tide:
      description: Tide entity
      type: object
      properties:
        source-date:
          type: string
          description: Date exactly from NOAA API
        iso-date:
          type: string
          format: date-time
          description: ISO formatted date and time of the tide
        local-date:
          type: string
          format: date-time
          description: ISO formatted date and time of the tide, possibly in a different timezone as iso-date
        type:
          type: string
          description: Type of tide (e.g., "Low", "High")
        time:
          type: string
          description: Time of the tide
        day:
          type: string
          description: day of the week of the tide
        date:
          type: string
          description: <month>:<day> of the time
        height:
          type: number
          format: float
          description: Height of the tide
      example:
        {
          "sourceDate": "2025-10-15 13:16",
          "isoDate": "2025-10-15T17:16:00Z",
          "localDate": "2025-10-15T13:16:00-04:00",
          "type": "low",
          "time": "13:16",
          "day": "Wed",
          "date": "10/15",
          "height": 0.311,
        }

    TidesResponse:
      description: A set of Tides from a station
      type: object
      properties:
        status:
          type: object
          items:
            $ref: "#/components/schemas/Status"
        reqTimestamp:
          type: string
          format: date-time
          description: Requested timestamp
        reqLocation:
          type: object
          items:
            $ref: "#/components/schemas/Location"
        station:
          type: object
          items:
            $ref: "#/components/schemas/Station"
        tides:
          type: array
          items:
            $ref: "#/components/schemas/Tide"
      example:
        {
          "status": { code: "OK", message: "" },
          "reqTimestamp": "2025-10-15T19:22:58.605Z",
          "reqLocation": { "lat": 42.710, "lon": -70.788 },
          "station":
            {
              "id": "8441241",
              "location": { "lat": 42.710, "lon": -70.788 },
              "name": "Plum Island South",
              "eTidesName": "Plum Island Sound (south end)",
              "tzOffset": -5,
            },
          "tides":
            [
              {
                "sourceDate": "2025-10-15 13:16",
                "isoDate": "2025-10-15T17:16:00Z",
                "localDate": "2025-10-15T13:16:00-04:00",
                "type": "low",
                "time": "13:16",
                "day": "Wed",
                "date": "10/15",
                "height": 0.311,
              },
            ],
        }
